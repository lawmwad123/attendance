"""Initial migration

Revision ID: db694fff07f0
Revises: 
Create Date: 2025-08-23 16:11:54.725190

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'db694fff07f0'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('schools',
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('slug', sa.String(length=100), nullable=False),
    sa.Column('address', sa.Text(), nullable=True),
    sa.Column('phone', sa.String(length=20), nullable=True),
    sa.Column('email', sa.String(length=255), nullable=True),
    sa.Column('website', sa.String(length=255), nullable=True),
    sa.Column('principal_name', sa.String(length=255), nullable=True),
    sa.Column('total_students', sa.Integer(), nullable=True),
    sa.Column('total_teachers', sa.Integer(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('timezone', sa.String(length=50), nullable=True),
    sa.Column('school_start_time', sa.String(length=10), nullable=True),
    sa.Column('school_end_time', sa.String(length=10), nullable=True),
    sa.Column('subscription_plan', sa.String(length=50), nullable=True),
    sa.Column('subscription_expires_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_schools'))
    )
    op.create_index(op.f('ix_schools_id'), 'schools', ['id'], unique=False)
    op.create_index(op.f('ix_schools_name'), 'schools', ['name'], unique=False)
    op.create_index(op.f('ix_schools_slug'), 'schools', ['slug'], unique=True)
    op.create_table('users',
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('username', sa.String(length=100), nullable=True),
    sa.Column('first_name', sa.String(length=100), nullable=False),
    sa.Column('last_name', sa.String(length=100), nullable=False),
    sa.Column('phone', sa.String(length=20), nullable=True),
    sa.Column('hashed_password', sa.String(length=255), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('is_verified', sa.Boolean(), nullable=True),
    sa.Column('role', sa.Enum('ADMIN', 'TEACHER', 'PARENT', 'SECURITY', 'STUDENT', name='userrole'), nullable=False),
    sa.Column('status', sa.Enum('ACTIVE', 'INACTIVE', 'PENDING', 'SUSPENDED', name='userstatus'), nullable=False),
    sa.Column('employee_id', sa.String(length=50), nullable=True),
    sa.Column('department', sa.String(length=100), nullable=True),
    sa.Column('hire_date', sa.String(length=10), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('school_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['school_id'], ['schools.id'], name=op.f('fk_users_school_id_schools')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_users')),
    sa.UniqueConstraint('employee_id', name=op.f('uq_users_employee_id'))
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_index(op.f('ix_users_school_id'), 'users', ['school_id'], unique=False)
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=False)
    op.create_table('classes',
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('grade_level', sa.String(length=10), nullable=False),
    sa.Column('section', sa.String(length=10), nullable=True),
    sa.Column('subject', sa.String(length=100), nullable=True),
    sa.Column('teacher_id', sa.Integer(), nullable=True),
    sa.Column('room_number', sa.String(length=20), nullable=True),
    sa.Column('capacity', sa.Integer(), nullable=True),
    sa.Column('current_strength', sa.Integer(), nullable=True),
    sa.Column('schedule_info', sa.Text(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('school_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['school_id'], ['schools.id'], name=op.f('fk_classes_school_id_schools')),
    sa.ForeignKeyConstraint(['teacher_id'], ['users.id'], name=op.f('fk_classes_teacher_id_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_classes'))
    )
    op.create_index(op.f('ix_classes_id'), 'classes', ['id'], unique=False)
    op.create_index(op.f('ix_classes_school_id'), 'classes', ['school_id'], unique=False)
    op.create_table('students',
    sa.Column('student_id', sa.String(length=50), nullable=False),
    sa.Column('first_name', sa.String(length=100), nullable=False),
    sa.Column('last_name', sa.String(length=100), nullable=False),
    sa.Column('date_of_birth', sa.Date(), nullable=True),
    sa.Column('gender', sa.Enum('MALE', 'FEMALE', 'OTHER', name='gender'), nullable=True),
    sa.Column('email', sa.String(length=255), nullable=True),
    sa.Column('phone', sa.String(length=20), nullable=True),
    sa.Column('address', sa.Text(), nullable=True),
    sa.Column('emergency_contact', sa.String(length=20), nullable=True),
    sa.Column('grade_level', sa.String(length=10), nullable=False),
    sa.Column('section', sa.String(length=10), nullable=True),
    sa.Column('roll_number', sa.String(length=20), nullable=True),
    sa.Column('admission_date', sa.Date(), nullable=True),
    sa.Column('status', sa.Enum('ACTIVE', 'INACTIVE', 'GRADUATED', 'TRANSFERRED', 'SUSPENDED', name='studentstatus'), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('rfid_card_id', sa.String(length=100), nullable=True),
    sa.Column('biometric_id', sa.String(length=100), nullable=True),
    sa.Column('parent_id', sa.Integer(), nullable=True),
    sa.Column('guardian_name', sa.String(length=200), nullable=True),
    sa.Column('guardian_phone', sa.String(length=20), nullable=True),
    sa.Column('guardian_relationship', sa.String(length=50), nullable=True),
    sa.Column('class_id', sa.Integer(), nullable=True),
    sa.Column('bus_route', sa.String(length=100), nullable=True),
    sa.Column('pickup_point', sa.String(length=200), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('school_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['class_id'], ['classes.id'], name=op.f('fk_students_class_id_classes')),
    sa.ForeignKeyConstraint(['parent_id'], ['users.id'], name=op.f('fk_students_parent_id_users')),
    sa.ForeignKeyConstraint(['school_id'], ['schools.id'], name=op.f('fk_students_school_id_schools')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_students'))
    )
    op.create_index(op.f('ix_students_biometric_id'), 'students', ['biometric_id'], unique=True)
    op.create_index(op.f('ix_students_id'), 'students', ['id'], unique=False)
    op.create_index(op.f('ix_students_rfid_card_id'), 'students', ['rfid_card_id'], unique=True)
    op.create_index(op.f('ix_students_school_id'), 'students', ['school_id'], unique=False)
    op.create_index(op.f('ix_students_student_id'), 'students', ['student_id'], unique=True)
    op.create_table('attendance',
    sa.Column('student_id', sa.Integer(), nullable=False),
    sa.Column('attendance_date', sa.Date(), nullable=False),
    sa.Column('status', sa.Enum('PRESENT', 'ABSENT', 'LATE', 'PARTIAL', 'EXCUSED', name='attendancestatus'), nullable=False),
    sa.Column('method', sa.Enum('MANUAL', 'BIOMETRIC', 'RFID', 'QR_CODE', 'MOBILE_APP', name='attendancemethod'), nullable=False),
    sa.Column('check_in_time', sa.DateTime(timezone=True), nullable=True),
    sa.Column('check_out_time', sa.DateTime(timezone=True), nullable=True),
    sa.Column('marked_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('marked_by_user_id', sa.Integer(), nullable=True),
    sa.Column('device_id', sa.String(length=100), nullable=True),
    sa.Column('location', sa.String(length=200), nullable=True),
    sa.Column('is_verified', sa.Boolean(), nullable=True),
    sa.Column('verification_method', sa.String(length=50), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('school_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['marked_by_user_id'], ['users.id'], name=op.f('fk_attendance_marked_by_user_id_users')),
    sa.ForeignKeyConstraint(['school_id'], ['schools.id'], name=op.f('fk_attendance_school_id_schools')),
    sa.ForeignKeyConstraint(['student_id'], ['students.id'], name=op.f('fk_attendance_student_id_students')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_attendance'))
    )
    op.create_index(op.f('ix_attendance_attendance_date'), 'attendance', ['attendance_date'], unique=False)
    op.create_index(op.f('ix_attendance_id'), 'attendance', ['id'], unique=False)
    op.create_index(op.f('ix_attendance_school_id'), 'attendance', ['school_id'], unique=False)
    op.create_index(op.f('ix_attendance_student_id'), 'attendance', ['student_id'], unique=False)
    op.create_table('attendance_summary',
    sa.Column('student_id', sa.Integer(), nullable=False),
    sa.Column('month', sa.String(length=7), nullable=False),
    sa.Column('year', sa.Integer(), nullable=False),
    sa.Column('total_days', sa.Integer(), nullable=True),
    sa.Column('present_days', sa.Integer(), nullable=True),
    sa.Column('absent_days', sa.Integer(), nullable=True),
    sa.Column('late_days', sa.Integer(), nullable=True),
    sa.Column('excused_days', sa.Integer(), nullable=True),
    sa.Column('attendance_percentage', sa.Integer(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('school_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['school_id'], ['schools.id'], name=op.f('fk_attendance_summary_school_id_schools')),
    sa.ForeignKeyConstraint(['student_id'], ['students.id'], name=op.f('fk_attendance_summary_student_id_students')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_attendance_summary'))
    )
    op.create_index(op.f('ix_attendance_summary_id'), 'attendance_summary', ['id'], unique=False)
    op.create_index(op.f('ix_attendance_summary_month'), 'attendance_summary', ['month'], unique=False)
    op.create_index(op.f('ix_attendance_summary_school_id'), 'attendance_summary', ['school_id'], unique=False)
    op.create_index(op.f('ix_attendance_summary_student_id'), 'attendance_summary', ['student_id'], unique=False)
    op.create_table('gate_passes',
    sa.Column('student_id', sa.Integer(), nullable=False),
    sa.Column('pass_number', sa.String(length=50), nullable=False),
    sa.Column('pass_type', sa.Enum('EMERGENCY', 'MEDICAL', 'EARLY_DISMISSAL', 'PARENT_PICKUP', 'FIELD_TRIP', 'OTHER', name='gatepasstype'), nullable=False),
    sa.Column('reason', sa.Text(), nullable=False),
    sa.Column('status', sa.Enum('PENDING', 'APPROVED', 'DENIED', 'ACTIVE', 'COMPLETED', 'EXPIRED', 'CANCELLED', name='gatepassstatus'), nullable=False),
    sa.Column('requested_exit_time', sa.DateTime(timezone=True), nullable=False),
    sa.Column('expected_return_time', sa.DateTime(timezone=True), nullable=True),
    sa.Column('actual_exit_time', sa.DateTime(timezone=True), nullable=True),
    sa.Column('actual_return_time', sa.DateTime(timezone=True), nullable=True),
    sa.Column('requested_by_user_id', sa.Integer(), nullable=False),
    sa.Column('approved_by_user_id', sa.Integer(), nullable=True),
    sa.Column('approved_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('approval_notes', sa.Text(), nullable=True),
    sa.Column('guardian_name', sa.String(length=200), nullable=True),
    sa.Column('guardian_phone', sa.String(length=20), nullable=True),
    sa.Column('guardian_id_proof', sa.String(length=100), nullable=True),
    sa.Column('exit_gate', sa.String(length=100), nullable=True),
    sa.Column('entry_gate', sa.String(length=100), nullable=True),
    sa.Column('exit_security_guard_id', sa.Integer(), nullable=True),
    sa.Column('entry_security_guard_id', sa.Integer(), nullable=True),
    sa.Column('exit_verified', sa.Boolean(), nullable=True),
    sa.Column('entry_verified', sa.Boolean(), nullable=True),
    sa.Column('emergency_contact_notified', sa.Boolean(), nullable=True),
    sa.Column('notification_sent_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('special_instructions', sa.Text(), nullable=True),
    sa.Column('internal_notes', sa.Text(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('school_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['approved_by_user_id'], ['users.id'], name=op.f('fk_gate_passes_approved_by_user_id_users')),
    sa.ForeignKeyConstraint(['entry_security_guard_id'], ['users.id'], name=op.f('fk_gate_passes_entry_security_guard_id_users')),
    sa.ForeignKeyConstraint(['exit_security_guard_id'], ['users.id'], name=op.f('fk_gate_passes_exit_security_guard_id_users')),
    sa.ForeignKeyConstraint(['requested_by_user_id'], ['users.id'], name=op.f('fk_gate_passes_requested_by_user_id_users')),
    sa.ForeignKeyConstraint(['school_id'], ['schools.id'], name=op.f('fk_gate_passes_school_id_schools')),
    sa.ForeignKeyConstraint(['student_id'], ['students.id'], name=op.f('fk_gate_passes_student_id_students')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_gate_passes'))
    )
    op.create_index(op.f('ix_gate_passes_id'), 'gate_passes', ['id'], unique=False)
    op.create_index(op.f('ix_gate_passes_pass_number'), 'gate_passes', ['pass_number'], unique=True)
    op.create_index(op.f('ix_gate_passes_school_id'), 'gate_passes', ['school_id'], unique=False)
    op.create_index(op.f('ix_gate_passes_student_id'), 'gate_passes', ['student_id'], unique=False)
    op.create_table('gate_pass_logs',
    sa.Column('gate_pass_id', sa.Integer(), nullable=False),
    sa.Column('action', sa.String(length=50), nullable=False),
    sa.Column('performed_by_user_id', sa.Integer(), nullable=False),
    sa.Column('performed_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('device_info', sa.Text(), nullable=True),
    sa.Column('location_info', sa.String(length=200), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('school_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['gate_pass_id'], ['gate_passes.id'], name=op.f('fk_gate_pass_logs_gate_pass_id_gate_passes')),
    sa.ForeignKeyConstraint(['performed_by_user_id'], ['users.id'], name=op.f('fk_gate_pass_logs_performed_by_user_id_users')),
    sa.ForeignKeyConstraint(['school_id'], ['schools.id'], name=op.f('fk_gate_pass_logs_school_id_schools')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_gate_pass_logs'))
    )
    op.create_index(op.f('ix_gate_pass_logs_gate_pass_id'), 'gate_pass_logs', ['gate_pass_id'], unique=False)
    op.create_index(op.f('ix_gate_pass_logs_id'), 'gate_pass_logs', ['id'], unique=False)
    op.create_index(op.f('ix_gate_pass_logs_school_id'), 'gate_pass_logs', ['school_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_gate_pass_logs_school_id'), table_name='gate_pass_logs')
    op.drop_index(op.f('ix_gate_pass_logs_id'), table_name='gate_pass_logs')
    op.drop_index(op.f('ix_gate_pass_logs_gate_pass_id'), table_name='gate_pass_logs')
    op.drop_table('gate_pass_logs')
    op.drop_index(op.f('ix_gate_passes_student_id'), table_name='gate_passes')
    op.drop_index(op.f('ix_gate_passes_school_id'), table_name='gate_passes')
    op.drop_index(op.f('ix_gate_passes_pass_number'), table_name='gate_passes')
    op.drop_index(op.f('ix_gate_passes_id'), table_name='gate_passes')
    op.drop_table('gate_passes')
    op.drop_index(op.f('ix_attendance_summary_student_id'), table_name='attendance_summary')
    op.drop_index(op.f('ix_attendance_summary_school_id'), table_name='attendance_summary')
    op.drop_index(op.f('ix_attendance_summary_month'), table_name='attendance_summary')
    op.drop_index(op.f('ix_attendance_summary_id'), table_name='attendance_summary')
    op.drop_table('attendance_summary')
    op.drop_index(op.f('ix_attendance_student_id'), table_name='attendance')
    op.drop_index(op.f('ix_attendance_school_id'), table_name='attendance')
    op.drop_index(op.f('ix_attendance_id'), table_name='attendance')
    op.drop_index(op.f('ix_attendance_attendance_date'), table_name='attendance')
    op.drop_table('attendance')
    op.drop_index(op.f('ix_students_student_id'), table_name='students')
    op.drop_index(op.f('ix_students_school_id'), table_name='students')
    op.drop_index(op.f('ix_students_rfid_card_id'), table_name='students')
    op.drop_index(op.f('ix_students_id'), table_name='students')
    op.drop_index(op.f('ix_students_biometric_id'), table_name='students')
    op.drop_table('students')
    op.drop_index(op.f('ix_classes_school_id'), table_name='classes')
    op.drop_index(op.f('ix_classes_id'), table_name='classes')
    op.drop_table('classes')
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_index(op.f('ix_users_school_id'), table_name='users')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_schools_slug'), table_name='schools')
    op.drop_index(op.f('ix_schools_name'), table_name='schools')
    op.drop_index(op.f('ix_schools_id'), table_name='schools')
    op.drop_table('schools')
    # ### end Alembic commands ### 