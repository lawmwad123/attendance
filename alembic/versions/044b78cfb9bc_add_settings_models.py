"""Add settings models

Revision ID: 044b78cfb9bc
Revises: db694fff07f0
Create Date: 2025-08-23 16:33:49.180678

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '044b78cfb9bc'
down_revision = 'db694fff07f0'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('class_levels',
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('code', sa.String(length=20), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('order', sa.Integer(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('school_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['school_id'], ['schools.id'], name=op.f('fk_class_levels_school_id_schools')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_class_levels')),
    sa.UniqueConstraint('code', name=op.f('uq_class_levels_code'))
    )
    op.create_index(op.f('ix_class_levels_id'), 'class_levels', ['id'], unique=False)
    op.create_index(op.f('ix_class_levels_school_id'), 'class_levels', ['school_id'], unique=False)
    op.create_table('devices',
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('device_type', sa.String(length=50), nullable=False),
    sa.Column('device_id', sa.String(length=100), nullable=False),
    sa.Column('location', sa.String(length=100), nullable=False),
    sa.Column('ip_address', sa.String(length=45), nullable=True),
    sa.Column('port', sa.Integer(), nullable=True),
    sa.Column('api_key', sa.String(length=255), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('last_sync', sa.String(length=50), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('school_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['school_id'], ['schools.id'], name=op.f('fk_devices_school_id_schools')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_devices')),
    sa.UniqueConstraint('device_id', name=op.f('uq_devices_device_id'))
    )
    op.create_index(op.f('ix_devices_id'), 'devices', ['id'], unique=False)
    op.create_index(op.f('ix_devices_school_id'), 'devices', ['school_id'], unique=False)
    op.create_table('school_settings',
    sa.Column('school_name', sa.String(length=255), nullable=False),
    sa.Column('school_motto', sa.String(length=500), nullable=True),
    sa.Column('school_logo_url', sa.String(length=500), nullable=True),
    sa.Column('school_address', sa.Text(), nullable=True),
    sa.Column('school_phone', sa.String(length=20), nullable=True),
    sa.Column('school_email', sa.String(length=255), nullable=True),
    sa.Column('school_website', sa.String(length=255), nullable=True),
    sa.Column('academic_year_start', sa.Date(), nullable=True),
    sa.Column('academic_year_end', sa.Date(), nullable=True),
    sa.Column('working_days', sa.JSON(), nullable=True),
    sa.Column('timezone', sa.String(length=50), nullable=True),
    sa.Column('terms', sa.JSON(), nullable=True),
    sa.Column('default_attendance_mode', sa.String(length=50), nullable=True),
    sa.Column('morning_attendance_start', sa.Time(), nullable=True),
    sa.Column('morning_attendance_end', sa.Time(), nullable=True),
    sa.Column('afternoon_attendance_start', sa.Time(), nullable=True),
    sa.Column('afternoon_attendance_end', sa.Time(), nullable=True),
    sa.Column('late_arrival_threshold', sa.Time(), nullable=True),
    sa.Column('absent_threshold', sa.Time(), nullable=True),
    sa.Column('auto_logout_time', sa.Time(), nullable=True),
    sa.Column('gate_pass_approval_workflow', sa.String(length=50), nullable=True),
    sa.Column('gate_pass_auto_expiry_hours', sa.Integer(), nullable=True),
    sa.Column('allowed_exit_start_time', sa.Time(), nullable=True),
    sa.Column('allowed_exit_end_time', sa.Time(), nullable=True),
    sa.Column('emergency_override_roles', sa.JSON(), nullable=True),
    sa.Column('biometric_type', sa.String(length=50), nullable=True),
    sa.Column('biometric_enrollment_fingers', sa.Integer(), nullable=True),
    sa.Column('biometric_retry_attempts', sa.Integer(), nullable=True),
    sa.Column('rfid_card_format', sa.String(length=50), nullable=True),
    sa.Column('card_reissue_policy', sa.Text(), nullable=True),
    sa.Column('devices', sa.JSON(), nullable=True),
    sa.Column('notification_channels', sa.JSON(), nullable=True),
    sa.Column('parent_notification_on_entry', sa.Boolean(), nullable=True),
    sa.Column('parent_notification_on_exit', sa.Boolean(), nullable=True),
    sa.Column('parent_notification_late_arrival', sa.Boolean(), nullable=True),
    sa.Column('teacher_notification_absentees', sa.Boolean(), nullable=True),
    sa.Column('security_notification_gate_pass', sa.Boolean(), nullable=True),
    sa.Column('sms_provider', sa.String(length=100), nullable=True),
    sa.Column('sms_api_key', sa.String(length=255), nullable=True),
    sa.Column('email_provider', sa.String(length=100), nullable=True),
    sa.Column('email_api_key', sa.String(length=255), nullable=True),
    sa.Column('public_holidays', sa.JSON(), nullable=True),
    sa.Column('special_events', sa.JSON(), nullable=True),
    sa.Column('exam_periods', sa.JSON(), nullable=True),
    sa.Column('theme_colors', sa.JSON(), nullable=True),
    sa.Column('report_template', sa.String(length=100), nullable=True),
    sa.Column('language', sa.String(length=10), nullable=True),
    sa.Column('data_retention_days', sa.Integer(), nullable=True),
    sa.Column('backup_frequency_hours', sa.Integer(), nullable=True),
    sa.Column('audit_log_enabled', sa.Boolean(), nullable=True),
    sa.Column('api_keys', sa.JSON(), nullable=True),
    sa.Column('integrations', sa.JSON(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('school_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['school_id'], ['schools.id'], name=op.f('fk_school_settings_school_id_schools')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_school_settings'))
    )
    op.create_index(op.f('ix_school_settings_id'), 'school_settings', ['id'], unique=False)
    op.create_index(op.f('ix_school_settings_school_id'), 'school_settings', ['school_id'], unique=False)
    op.create_table('subjects',
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('code', sa.String(length=20), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('is_core', sa.Boolean(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('school_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['school_id'], ['schools.id'], name=op.f('fk_subjects_school_id_schools')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_subjects'))
    )
    op.create_index(op.f('ix_subjects_id'), 'subjects', ['id'], unique=False)
    op.create_index(op.f('ix_subjects_school_id'), 'subjects', ['school_id'], unique=False)
    op.add_column('classes', sa.Column('code', sa.String(length=20), nullable=False))
    op.add_column('classes', sa.Column('level_id', sa.Integer(), nullable=False))
    op.create_foreign_key(op.f('fk_classes_level_id_class_levels'), 'classes', 'class_levels', ['level_id'], ['id'])
    op.drop_column('classes', 'schedule_info')
    op.drop_column('classes', 'grade_level')
    op.drop_column('classes', 'section')
    op.drop_column('classes', 'room_number')
    op.drop_column('classes', 'subject')
    op.drop_column('classes', 'current_strength')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('classes', sa.Column('current_strength', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('classes', sa.Column('subject', sa.VARCHAR(length=100), autoincrement=False, nullable=True))
    op.add_column('classes', sa.Column('room_number', sa.VARCHAR(length=20), autoincrement=False, nullable=True))
    op.add_column('classes', sa.Column('section', sa.VARCHAR(length=10), autoincrement=False, nullable=True))
    op.add_column('classes', sa.Column('grade_level', sa.VARCHAR(length=10), autoincrement=False, nullable=False))
    op.add_column('classes', sa.Column('schedule_info', sa.TEXT(), autoincrement=False, nullable=True))
    op.drop_constraint(op.f('fk_classes_level_id_class_levels'), 'classes', type_='foreignkey')
    op.drop_column('classes', 'level_id')
    op.drop_column('classes', 'code')
    op.drop_index(op.f('ix_subjects_school_id'), table_name='subjects')
    op.drop_index(op.f('ix_subjects_id'), table_name='subjects')
    op.drop_table('subjects')
    op.drop_index(op.f('ix_school_settings_school_id'), table_name='school_settings')
    op.drop_index(op.f('ix_school_settings_id'), table_name='school_settings')
    op.drop_table('school_settings')
    op.drop_index(op.f('ix_devices_school_id'), table_name='devices')
    op.drop_index(op.f('ix_devices_id'), table_name='devices')
    op.drop_table('devices')
    op.drop_index(op.f('ix_class_levels_school_id'), table_name='class_levels')
    op.drop_index(op.f('ix_class_levels_id'), table_name='class_levels')
    op.drop_table('class_levels')
    # ### end Alembic commands ### 