"""create_visitor_tables

Revision ID: a69489f772ab
Revises: 86cd25054bbd
Create Date: 2025-08-30 00:18:58.999493

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'a69489f772ab'
down_revision = '86cd25054bbd'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('visitor_settings',
    sa.Column('visiting_hours_start', sa.String(length=10), nullable=True),
    sa.Column('visiting_hours_end', sa.String(length=10), nullable=True),
    sa.Column('max_visit_duration_hours', sa.Integer(), nullable=True),
    sa.Column('auto_checkout_after_hours', sa.Integer(), nullable=True),
    sa.Column('approval_workflow', sa.Enum('AUTO_APPROVE', 'HOST_APPROVE', 'ADMIN_APPROVE', 'BOTH_APPROVE', name='visitorapprovalworkflow'), nullable=True),
    sa.Column('auto_approve_parent_visits', sa.Boolean(), nullable=True),
    sa.Column('require_id_verification', sa.Boolean(), nullable=True),
    sa.Column('notify_host_on_arrival', sa.Boolean(), nullable=True),
    sa.Column('notify_parent_on_visitor', sa.Boolean(), nullable=True),
    sa.Column('notify_security_on_overstay', sa.Boolean(), nullable=True),
    sa.Column('notify_admin_on_blacklisted', sa.Boolean(), nullable=True),
    sa.Column('print_visitor_badges', sa.Boolean(), nullable=True),
    sa.Column('badge_expiry_hours', sa.Integer(), nullable=True),
    sa.Column('require_photo_capture', sa.Boolean(), nullable=True),
    sa.Column('enable_blacklist', sa.Boolean(), nullable=True),
    sa.Column('enable_emergency_evacuation', sa.Boolean(), nullable=True),
    sa.Column('require_vehicle_registration', sa.Boolean(), nullable=True),
    sa.Column('integrate_with_gate_pass', sa.Boolean(), nullable=True),
    sa.Column('enable_qr_codes', sa.Boolean(), nullable=True),
    sa.Column('enable_temp_rfid', sa.Boolean(), nullable=True),
    sa.Column('allow_pre_registration', sa.Boolean(), nullable=True),
    sa.Column('pre_registration_hours_ahead', sa.Integer(), nullable=True),
    sa.Column('auto_approve_pre_registered', sa.Boolean(), nullable=True),
    sa.Column('daily_visitor_reports', sa.Boolean(), nullable=True),
    sa.Column('weekly_visitor_analytics', sa.Boolean(), nullable=True),
    sa.Column('security_alert_reports', sa.Boolean(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('school_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['school_id'], ['schools.id'], name=op.f('fk_visitor_settings_school_id_schools')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_visitor_settings'))
    )
    op.create_index(op.f('ix_visitor_settings_id'), 'visitor_settings', ['id'], unique=False)
    op.create_index(op.f('ix_visitor_settings_school_id'), 'visitor_settings', ['school_id'], unique=False)
    op.create_table('visitor_blacklist',
    sa.Column('first_name', sa.String(length=100), nullable=False),
    sa.Column('last_name', sa.String(length=100), nullable=False),
    sa.Column('phone', sa.String(length=20), nullable=True),
    sa.Column('email', sa.String(length=255), nullable=True),
    sa.Column('id_number', sa.String(length=100), nullable=True),
    sa.Column('id_type', sa.String(length=50), nullable=True),
    sa.Column('reason', sa.Text(), nullable=False),
    sa.Column('blacklisted_by_user_id', sa.Integer(), nullable=False),
    sa.Column('blacklisted_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('expires_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('photo_url', sa.String(length=500), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('school_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['blacklisted_by_user_id'], ['users.id'], name=op.f('fk_visitor_blacklist_blacklisted_by_user_id_users')),
    sa.ForeignKeyConstraint(['school_id'], ['schools.id'], name=op.f('fk_visitor_blacklist_school_id_schools')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_visitor_blacklist'))
    )
    op.create_index(op.f('ix_visitor_blacklist_id'), 'visitor_blacklist', ['id'], unique=False)
    op.create_index(op.f('ix_visitor_blacklist_school_id'), 'visitor_blacklist', ['school_id'], unique=False)
    op.create_table('visitors',
    sa.Column('first_name', sa.String(length=100), nullable=False),
    sa.Column('last_name', sa.String(length=100), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=True),
    sa.Column('phone', sa.String(length=20), nullable=False),
    sa.Column('id_type', sa.String(length=50), nullable=True),
    sa.Column('id_number', sa.String(length=100), nullable=True),
    sa.Column('id_photo_url', sa.String(length=500), nullable=True),
    sa.Column('visitor_type', sa.Enum('PARENT_GUARDIAN', 'GUEST_SPEAKER', 'CONTRACTOR', 'SUPPLIER', 'GUEST', 'EMERGENCY', 'OTHER', name='visitortype'), nullable=False),
    sa.Column('purpose', sa.Text(), nullable=False),
    sa.Column('host_user_id', sa.Integer(), nullable=True),
    sa.Column('host_student_id', sa.Integer(), nullable=True),
    sa.Column('requested_entry_time', sa.DateTime(timezone=True), nullable=False),
    sa.Column('expected_exit_time', sa.DateTime(timezone=True), nullable=True),
    sa.Column('actual_entry_time', sa.DateTime(timezone=True), nullable=True),
    sa.Column('actual_exit_time', sa.DateTime(timezone=True), nullable=True),
    sa.Column('status', sa.Enum('PENDING', 'APPROVED', 'DENIED', 'CHECKED_IN', 'CHECKED_OUT', 'EXPIRED', 'CANCELLED', name='visitorstatus'), nullable=False),
    sa.Column('approved_by_user_id', sa.Integer(), nullable=True),
    sa.Column('approved_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('approval_notes', sa.Text(), nullable=True),
    sa.Column('qr_code', sa.String(length=255), nullable=True),
    sa.Column('temp_rfid_card', sa.String(length=100), nullable=True),
    sa.Column('badge_number', sa.String(length=50), nullable=True),
    sa.Column('is_blacklisted', sa.Boolean(), nullable=True),
    sa.Column('blacklist_reason', sa.Text(), nullable=True),
    sa.Column('security_notes', sa.Text(), nullable=True),
    sa.Column('entry_gate', sa.String(length=100), nullable=True),
    sa.Column('exit_gate', sa.String(length=100), nullable=True),
    sa.Column('entry_security_guard_id', sa.Integer(), nullable=True),
    sa.Column('exit_security_guard_id', sa.Integer(), nullable=True),
    sa.Column('entry_verified', sa.Boolean(), nullable=True),
    sa.Column('exit_verified', sa.Boolean(), nullable=True),
    sa.Column('host_notified', sa.Boolean(), nullable=True),
    sa.Column('host_notification_sent_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('parent_notified', sa.Boolean(), nullable=True),
    sa.Column('parent_notification_sent_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('vehicle_number', sa.String(length=20), nullable=True),
    sa.Column('company_name', sa.String(length=200), nullable=True),
    sa.Column('emergency_contact', sa.String(length=20), nullable=True),
    sa.Column('special_instructions', sa.Text(), nullable=True),
    sa.Column('is_pre_registered', sa.Boolean(), nullable=True),
    sa.Column('pre_registered_by_user_id', sa.Integer(), nullable=True),
    sa.Column('pre_registration_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('school_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['approved_by_user_id'], ['users.id'], name=op.f('fk_visitors_approved_by_user_id_users')),
    sa.ForeignKeyConstraint(['entry_security_guard_id'], ['users.id'], name=op.f('fk_visitors_entry_security_guard_id_users')),
    sa.ForeignKeyConstraint(['exit_security_guard_id'], ['users.id'], name=op.f('fk_visitors_exit_security_guard_id_users')),
    sa.ForeignKeyConstraint(['host_student_id'], ['students.id'], name=op.f('fk_visitors_host_student_id_students')),
    sa.ForeignKeyConstraint(['host_user_id'], ['users.id'], name=op.f('fk_visitors_host_user_id_users')),
    sa.ForeignKeyConstraint(['pre_registered_by_user_id'], ['users.id'], name=op.f('fk_visitors_pre_registered_by_user_id_users')),
    sa.ForeignKeyConstraint(['school_id'], ['schools.id'], name=op.f('fk_visitors_school_id_schools')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_visitors'))
    )
    op.create_index(op.f('ix_visitors_badge_number'), 'visitors', ['badge_number'], unique=True)
    op.create_index(op.f('ix_visitors_id'), 'visitors', ['id'], unique=False)
    op.create_index(op.f('ix_visitors_qr_code'), 'visitors', ['qr_code'], unique=True)
    op.create_index(op.f('ix_visitors_school_id'), 'visitors', ['school_id'], unique=False)
    op.create_index(op.f('ix_visitors_temp_rfid_card'), 'visitors', ['temp_rfid_card'], unique=True)
    op.create_table('visitor_logs',
    sa.Column('visitor_id', sa.Integer(), nullable=False),
    sa.Column('action', sa.String(length=50), nullable=False),
    sa.Column('performed_by_user_id', sa.Integer(), nullable=False),
    sa.Column('performed_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('device_info', sa.Text(), nullable=True),
    sa.Column('location_info', sa.String(length=200), nullable=True),
    sa.Column('ip_address', sa.String(length=45), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('school_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['performed_by_user_id'], ['users.id'], name=op.f('fk_visitor_logs_performed_by_user_id_users')),
    sa.ForeignKeyConstraint(['school_id'], ['schools.id'], name=op.f('fk_visitor_logs_school_id_schools')),
    sa.ForeignKeyConstraint(['visitor_id'], ['visitors.id'], name=op.f('fk_visitor_logs_visitor_id_visitors')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_visitor_logs'))
    )
    op.create_index(op.f('ix_visitor_logs_id'), 'visitor_logs', ['id'], unique=False)
    op.create_index(op.f('ix_visitor_logs_school_id'), 'visitor_logs', ['school_id'], unique=False)
    op.create_index(op.f('ix_visitor_logs_visitor_id'), 'visitor_logs', ['visitor_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_visitor_logs_visitor_id'), table_name='visitor_logs')
    op.drop_index(op.f('ix_visitor_logs_school_id'), table_name='visitor_logs')
    op.drop_index(op.f('ix_visitor_logs_id'), table_name='visitor_logs')
    op.drop_table('visitor_logs')
    op.drop_index(op.f('ix_visitors_temp_rfid_card'), table_name='visitors')
    op.drop_index(op.f('ix_visitors_school_id'), table_name='visitors')
    op.drop_index(op.f('ix_visitors_qr_code'), table_name='visitors')
    op.drop_index(op.f('ix_visitors_id'), table_name='visitors')
    op.drop_index(op.f('ix_visitors_badge_number'), table_name='visitors')
    op.drop_table('visitors')
    op.drop_index(op.f('ix_visitor_blacklist_school_id'), table_name='visitor_blacklist')
    op.drop_index(op.f('ix_visitor_blacklist_id'), table_name='visitor_blacklist')
    op.drop_table('visitor_blacklist')
    op.drop_index(op.f('ix_visitor_settings_school_id'), table_name='visitor_settings')
    op.drop_index(op.f('ix_visitor_settings_id'), table_name='visitor_settings')
    op.drop_table('visitor_settings')
    # ### end Alembic commands ### 